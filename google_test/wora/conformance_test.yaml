apiVersion: sut.tailorbird.io/v1alpha1
kind: Rookery
metadata:
  name: integration-test-rookery
  namespace: tailorbird-users
spec:
  applications:
  - apiVersion: sut.tailorbird.io/v1alpha1
    kind: Application
    metadata:
      name: integration-test-rookery
      namespace: tailorbird-users
    spec:
      resourceTypeReference:
        name: anthos-networking-test-workloads
        version: latest
      directives:
      - apiVersion: sut.tailorbird.io/v1alpha1
        kind: ExecutionDirective
        metadata:
          name: integration-test-execution
        spec:
          targets:
          - namePrefix: oob # This should match prefix of cluster name in `--upload-external-clusters`
            kind: Cluster
            namespace: tailorbird-users
          args: # Compare arguments in ../upstream_test/run_k8s_conformance_test.sh
          - /test/ginkgo
          - --nodes=10
          - --focus=\[Conformance\]|\[sig-network\]
          - --skip=Feature|Federation|PerformanceDNS|DualStack|Disruptive|Serial|KubeProxy|kube-proxy|ExternalIP|LoadBalancer|GCE|Netpol|NetworkPolicy|rejected|externalTrafficPolicy|HostPort|same.port.number.but.different.protocols|should.serve.endpoints.on.same.port.and.different.protocols
          - --skip=should.support.remote.command.execution.over.websockets
          - --skip=should.support.retrieving.logs.from.the.container.over.websockets
          - --keep-going
          - --timeout=2h
          - --no-color
          - /test/e2e.test
          - --
          - --kubeconfig={{ KubeconfigPath "user" ((Ref "Cluster" "oob").Name) }}
          - --provider=local
          - --dump-logs-on-failure=true
          - --report-dir={{ RuntimePath "." }}
          - --disable-log-dump=true
          env:
            HTTP_PROXY: '{{ ResourceVar ((Ref "Cluster" "oob").Name) "HTTP_PROXY" }}'
            HTTPS_PROXY: '{{ ResourceVar ((Ref "Cluster" "oob").Name) "HTTPS_PROXY" }}'
            KUBECONFIG: '{{ KubeconfigPath "user" ((Ref "Cluster" "oob").Name) }}'
            KUBERNETES_CONFORMANCE_TEST: 'y'
            RESULTS_DIR: '{{ RuntimePath "." }}' # Write results to root of artifacts dir.
