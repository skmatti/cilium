/*
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/cilium/cilium/pkg/gke/apis/networklogging/v1alpha1"
	scheme "github.com/cilium/cilium/pkg/gke/client/networklogging/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
)

// NetworkLoggingListsGetter has a method to return a NetworkLoggingListInterface.
// A group's client should implement this interface.
type NetworkLoggingListsGetter interface {
	NetworkLoggingLists() NetworkLoggingListInterface
}

// NetworkLoggingListInterface has methods to work with NetworkLoggingList resources.
type NetworkLoggingListInterface interface {
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.NetworkLoggingList, error)
	NetworkLoggingListExpansion
}

// networkLoggingLists implements NetworkLoggingListInterface
type networkLoggingLists struct {
	client rest.Interface
}

// newNetworkLoggingLists returns a NetworkLoggingLists
func newNetworkLoggingLists(c *NetworkingV1alpha1Client) *networkLoggingLists {
	return &networkLoggingLists{
		client: c.RESTClient(),
	}
}

// Get takes name of the networkLoggingList, and returns the corresponding networkLoggingList object, and an error if there is any.
func (c *networkLoggingLists) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha1.NetworkLoggingList, err error) {
	result = &v1alpha1.NetworkLoggingList{}
	err = c.client.Get().
		Resource("networklogginglists").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do(ctx).
		Into(result)
	return
}
