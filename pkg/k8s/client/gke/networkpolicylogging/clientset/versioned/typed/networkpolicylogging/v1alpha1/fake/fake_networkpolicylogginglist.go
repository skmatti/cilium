/*
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	"context"

	v1alpha1 "github.com/cilium/cilium/pkg/k8s/apis/gke/networkpolicylogging/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	testing "k8s.io/client-go/testing"
)

// FakeNetworkPolicyLoggingLists implements NetworkPolicyLoggingListInterface
type FakeNetworkPolicyLoggingLists struct {
	Fake *FakeNetworkingV1alpha1
}

var networkpolicylogginglistsResource = schema.GroupVersionResource{Group: "networking.gke.io", Version: "v1alpha1", Resource: "networkpolicylogginglists"}

var networkpolicylogginglistsKind = schema.GroupVersionKind{Group: "networking.gke.io", Version: "v1alpha1", Kind: "NetworkPolicyLoggingList"}

// Get takes name of the networkPolicyLoggingList, and returns the corresponding networkPolicyLoggingList object, and an error if there is any.
func (c *FakeNetworkPolicyLoggingLists) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha1.NetworkPolicyLoggingList, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootGetAction(networkpolicylogginglistsResource, name), &v1alpha1.NetworkPolicyLoggingList{})
	if obj == nil {
		return nil, err
	}
	return obj.(*v1alpha1.NetworkPolicyLoggingList), err
}
